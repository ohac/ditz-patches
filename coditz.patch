diff --git a/bin/coditz.rb b/bin/coditz.rb
new file mode 100755
index 0000000..1e7dd44
--- /dev/null
+++ b/bin/coditz.rb
@@ -0,0 +1,92 @@
+#!/usr/bin/ruby
+$LOAD_PATH.unshift(File.expand_path("#{File.dirname($0)}/../lib"))
+require 'rubygems'
+require 'cinatra'
+#require 'yaml_waml'
+
+# FIXME see http://github.com/jugyo/cinatra/issues/#issue/4
+begin
+
+require 'ditz'
+
+CONFIG_FN = ".ditz-config"
+PLUGIN_FN = ".ditz-plugins"
+
+=begin
+bin/ditz
+lib/ditz.rb
+lib/ditz/operator.rb
+lib/ditz/views.rb
+lib/ditz/model-objects.rb
+lib/ditz/model.rb
+lib/ditz/lowline.rb
+=end
+
+def ditz_plugin_file
+  plugin_dir = Ditz::find_dir_containing PLUGIN_FN
+  File.join(plugin_dir || ".", PLUGIN_FN)
+end
+
+def ditz_config_file
+  config_dir = Ditz::find_dir_containing CONFIG_FN
+  File.join(config_dir || ".", CONFIG_FN)
+end
+
+def ditz_op(cmd, opts = [])
+  config_file = ditz_config_file
+  unless File.exist?(config_file)
+    puts 'do init first.'
+    return
+  end
+  config = Ditz::Config.from config_file
+  config.use_editor_if_possible = false # overwrite
+  config.paginate = "never" # overwrite
+  issue_dir = Pathname.new(config.issue_dir)
+  unless issue_dir.exist?
+    issue_dir.mkdir
+    fn = issue_dir + Ditz::FileStorage::PROJECT_FN
+    return if cmd != 'init'
+    project = Ditz::Project.create(
+        :name => "myproject",
+        :components => [ Ditz::Component.create(:name => "mycomponent") ]
+        )
+    project.save! fn
+  else
+    storage = Ditz::FileStorage.new issue_dir
+    project = storage.load
+    op = Ditz::Operator.new
+    op.do cmd, project, config, opts
+  end
+end
+
+command 'dhelp' do |arg|
+  ditz_op 'help'
+end
+
+command 'print_hooks' do |arg|
+  Ditz::HookManager.print_hooks
+end
+
+command 'todo' do |arg|
+  ditz_op 'todo'
+end
+
+command 'init' do |arg|
+  config_file = ditz_config_file
+  unless File.exist?(config_file)
+    new_config = Ditz::Config.create(
+        :name => "OHASHI Hideya",
+        :email => "ohachige@gmail.com",
+        :issue_dir => ".ditz",
+        :use_editor_if_possible => false,
+        :paginate => "never"
+        )
+    new_config.save! config_file
+  end
+  ditz_op 'init'
+end
+
+# FIXME see http://github.com/jugyo/cinatra/issues/#issue/4
+rescue => x
+  p x
+end
